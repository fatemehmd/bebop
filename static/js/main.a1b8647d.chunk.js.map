{"version":3,"sources":["components/SpaceTunnel.jsx","App.js","index.js"],"names":["SpaceTunnel","progress","setProgress","useState","speed","setSpeed","isControlOpen","setIsControlOpen","useEffect","animationId","animate","prev","requestAnimationFrame","cancelAnimationFrame","React","createElement","style","position","inset","backgroundColor","overflow","top","right","zIndex","onClick","padding","color","border","borderRadius","cursor","marginTop","toFixed","type","min","max","step","value","onChange","e","Number","target","width","display","alignItems","justifyContent","perspective","transformStyle","transform","Array","from","length","map","_","index","depth","z","scale","getLEDColor","stripIndex","key","left","height","borderColor","boxShadow","opacity","App","className","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA2HeA,MAzHKA,KAClB,MAAOC,EAAUC,GAAeC,mBAAS,IAClCC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAeC,GAAoBJ,oBAAS,GAEnDK,oBAAU,KACR,IAAIC,EACJ,MAAMC,EAAUA,KACdR,EAAYS,IAASA,EAAe,KAARP,GAAiB,GAC7CK,EAAcG,sBAAsBF,IAItC,OADAD,EAAcG,sBAAsBF,GAC7B,IAAMG,qBAAqBJ,IACjC,CAACL,IAQJ,OACEU,IAAAC,cAAA,OAAKC,MAAO,CACVC,SAAU,QACVC,MAAO,EACPC,gBAAiB,OACjBC,SAAU,WAGVN,IAAAC,cAAA,OAAKC,MAAO,CACVC,SAAU,WACVI,IAAK,OACLC,MAAO,OACPC,OAAQ,KAERT,IAAAC,cAAA,UACES,QAASA,IAAMjB,GAAkBD,GACjCU,MAAO,CACLS,QAAS,cACTN,gBAAiB,UACjBO,MAAO,QACPC,OAAQ,OACRC,aAAc,UACdC,OAAQ,YAEX,YAIAvB,GACCQ,IAAAC,cAAA,OAAKC,MAAO,CACVc,UAAW,SACXL,QAAS,OACTN,gBAAiB,wBACjBS,aAAc,UACdF,MAAO,UAEPZ,IAAAC,cAAA,aAAO,UACGX,EAAM2B,QAAQ,GAAG,IACzBjB,IAAAC,cAAA,SACEiB,KAAK,QACLC,IAAI,MACJC,IAAI,IACJC,KAAK,MACLC,MAAOhC,EACPiC,SAAWC,GAAMjC,EAASkC,OAAOD,EAAEE,OAAOJ,QAC1CpB,MAAO,CACLyB,MAAO,OACPX,UAAW,eASvBhB,IAAAC,cAAA,OAAKC,MAAO,CACVC,SAAU,WACVC,MAAO,EACPwB,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,YAAa,WAEb/B,IAAAC,cAAA,OAAKC,MAAO,CACVC,SAAU,WACV6B,eAAgB,cAChBC,UAAW,kBAEVC,MAAMC,KAAK,CAAEC,OAAQ,KAAMC,IAAI,CAACC,EAAGC,KAClC,MAAMC,EAAQD,EAAQ,GAChBE,EAAa,KAARD,EACLE,EAAQ,EAAY,GAARF,EACZ5B,EA/EI+B,EAACC,EAAYzD,WAEb,KADJyD,EAAa,GAAM,IAAiB,IAAXzD,GAAkB,IAC1B,kBA6ETwD,CAAYJ,EAAOpD,GAEjC,OACEa,IAAAC,cAAA,OACE4C,IAAKN,EACLrC,MAAO,CACLC,SAAU,WACV2C,KAAM,MACNvC,IAAK,MACLoB,MAAO,SACPoB,OAAQ,SACRd,8CAA+CQ,cAAcC,KAC7D7B,OAAQ,YACRmC,YAAapC,EACbqC,2BAA4BrC,IAC5BsC,QAAS,EAAY,GAARV,WCrGhBW,MARf,WACE,OACEnD,IAAAC,cAAA,OAAKmD,UAAU,OACbpD,IAAAC,cAACf,EAAW,QCDLmE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzD,IAAAC,cAACD,IAAM0D,WAAU,KACf1D,IAAAC,cAACkD,EAAG","file":"static/js/main.a1b8647d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst SpaceTunnel = () => {\n  const [progress, setProgress] = useState(0);\n  const [speed, setSpeed] = useState(0.2);\n  const [isControlOpen, setIsControlOpen] = useState(false);\n\n  useEffect(() => {\n    let animationId;\n    const animate = () => {\n      setProgress(prev => (prev + speed * 0.005) % 1);\n      animationId = requestAnimationFrame(animate);\n    };\n\n    animationId = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationId);\n  }, [speed]);\n\n  const getLEDColor = (stripIndex, progress) => {\n    const hue = ((stripIndex / 15) * 360 + progress * 360) % 360;\n    const mappedHue = 180 + (hue % 120);\n    return `hsl(${mappedHue}, 100%, 50%)`; // Increased saturation and brightness\n  };\n\n  return (\n    <div style={{\n      position: 'fixed',\n      inset: 0,\n      backgroundColor: '#000',\n      overflow: 'hidden'\n    }}>\n      {/* Controls */}\n      <div style={{\n        position: 'absolute',\n        top: '1rem',\n        right: '1rem',\n        zIndex: 50,\n      }}>\n        <button\n          onClick={() => setIsControlOpen(!isControlOpen)}\n          style={{\n            padding: '0.5rem 1rem',\n            backgroundColor: '#1a1a1a',\n            color: 'white',\n            border: 'none',\n            borderRadius: '0.25rem',\n            cursor: 'pointer'\n          }}\n        >\n          Controls\n        </button>\n\n        {isControlOpen && (\n          <div style={{\n            marginTop: '0.5rem',\n            padding: '1rem',\n            backgroundColor: 'rgba(26, 26, 26, 0.9)',\n            borderRadius: '0.25rem',\n            color: 'white'\n          }}>\n            <label>\n              Speed: {speed.toFixed(1)}x\n              <input\n                type=\"range\"\n                min=\"0.1\"\n                max=\"3\"\n                step=\"0.1\"\n                value={speed}\n                onChange={(e) => setSpeed(Number(e.target.value))}\n                style={{\n                  width: '100%',\n                  marginTop: '0.5rem'\n                }}\n              />\n            </label>\n          </div>\n        )}\n      </div>\n\n      {/* Tunnel */}\n      <div style={{\n        position: 'absolute',\n        inset: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        perspective: '1000px'\n      }}>\n        <div style={{\n          position: 'relative',\n          transformStyle: 'preserve-3d',\n          transform: 'translateZ(0)'\n        }}>\n          {Array.from({ length: 15 }).map((_, index) => {\n            const depth = index / 14;\n            const z = -depth * 1000;\n            const scale = 1 - depth * 0.6;\n            const color = getLEDColor(index, progress);\n\n            return (\n              <div\n                key={index}\n                style={{\n                  position: 'absolute',\n                  left: '50%',\n                  top: '50%',\n                  width: '90vmin',\n                  height: '90vmin',\n                  transform: `translate(-50%, -50%) translateZ(${z}px) scale(${scale})`,\n                  border: '3px solid',\n                  borderColor: color,\n                  boxShadow: `0 0 20px 10px ${color}`,\n                  opacity: 1 - depth * 0.3,\n                }}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpaceTunnel;","import React from 'react';\nimport SpaceTunnel from './components/SpaceTunnel';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SpaceTunnel />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}